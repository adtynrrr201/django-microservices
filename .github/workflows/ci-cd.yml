name: CI/CD Multi-Service

on:
  push:
    branches: [ "main" ]

jobs:
  # --- CI: Build & Test semua service ---
  build-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        service: [auth_service, order_service, myproject]   # daftar service
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install -r ${{ matrix.service }}/requirements.txt

      - name: Run tests
        run: |
          cd ${{ matrix.service }}
          pytest   # atau manage.py test untuk Django

  # --- Deploy Staging ---
  deploy-staging:
    runs-on: ubuntu-latest
    needs: build-test
    strategy:
      fail-fast: true
      matrix:
        service: [auth_service, order_service, myproject]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push image (staging)
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service }}
          file: ${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:staging

  # --- Deploy Production ---
  deploy-prod:
    runs-on: ubuntu-latest
    needs: deploy-staging
    strategy:
      fail-fast: true
      matrix:
        service: [auth_service, order_service, myproject]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push image (production)
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service }}
          file: ${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest
